@model Usuario
@{
    ViewData["Title"] = "Login";
}

@using (Html.BeginForm("AutenticacaoUsuario", "Usuario", FormMethod.Post, new { @class = "needs-validation", @novalidate = true }))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()
    <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col-12 col-md-8 col-lg-6 col-xl-5">
            <div class="card shadow-2-strong" style="border-radius: 1rem;">
                <div class="card-body p-5 text-center">
                    @if (TempData["Message"] != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            @TempData["Message"].ToString()
                        </div>
                    }
                    <h3 class="mb-5">Sign in</h3>
                    <div class="form-outline mb-4">
                        <label class="form-label" for="lblusername">Username</label>
                        @Html.TextBoxFor(model => model.Username, new { @type = "text", @class = "form-control", @id = "txtUsername", @placeholder = "Username", @required = true })
                        <div class="valid-feedback">Tudo certo</div>
                        <div class="invalid-feedback">Username em branco</div>
                    </div>
                    <div class="form-outline mb-4">
                        <label class="form-label" for="lblPassword">Password</label>
                        @Html.TextBoxFor(model => model.Password, new { @type = "password", @class = "form-control", @id = "txtPassword", @placeholder = "Password", @required = true })
                        <div class="valid-feedback">Tudo certo</div>
                        <div class="invalid-feedback">Senha em branco</div>
                    </div>
                    <button class="btn btn-primary btn-lg btn-block" type="submit">Login</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>